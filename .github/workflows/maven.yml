name: Appium CI
# on push we will trigger our code
on: [push]

jobs:
  build:
    name: Build APK 
    runs-on: macos-latest # the machine type
    strategy: # we are using strategy if we need to run on parallel with different devices and version
      matrix:
        api-level: [29] #Google api level for example [25,23,28] 
        target: [default]
    steps:
    - uses: actions/checkout@v2 #checkout the code 
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - uses: subosito/flutter-action@v1
      with:
        flutter-version: '1.17.0'
    - name: Get version.txt
      uses: actions/download-artifact@v2
      with:
        name: gitversion
    - name: Read version
      id: version
      uses: juliangruber/read-file-action@v1
      with:
        path: version.txt 
        
    - name: Install and Run Appium Server
      run: |
        chmod +x ./scripts/RunAppiumServer.sh # install and run appium server in the background
        ./scripts/RunAppiumServer.sh
    - name: Run Appium Tests
      uses: reactivecircus/android-emulator-runner@v1 # install and create the Emulator
      with:
        api-level: ${{ matrix.api-level }}
        target: ${{ matrix.target }}
        arch: x86_64
        profile: Nexus 6
        script: mvn test # running our test with info to check the results

    - name: Create a Release in GitHub
      uses: ncipollo/release-action@v1
      with:
        artifacts: "build/app/outputs/apk/release/*.apk,build/app/outputs/bundle/release/app-release.aab"
        token: ${{ secrets.GH_TOKEN }}
        tag: ${{ steps.version.outputs.content }}
        commit: ${{ github.sha }}
